version: '3'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    env_file:
      - apps/web/.env
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/api/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis
      - mongo

  rabbitmq:
    image: rabbitmq:3-management
    env_file: apps/auto-email-sender/.env
    ports:
      - 5672:5672
      - 15672:15672
    expose:
      - 5672
      - 15672
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'check_port_connectivity']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis
    container_name: redis
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongo:
    image: mongo:latest
    env_file: apps/auto-email-sender/.env
    ports:
      - '27017:27017'
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  auto-email-sender:
    build:
      context: .
      dockerfile: Dockerfile.auto
    env_file:
      - apps/auto-email-sender/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_healthy

volumes:
  mongo-data:
    driver: local
