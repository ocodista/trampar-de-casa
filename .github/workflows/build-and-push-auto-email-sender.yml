name: Build and push auto email sender 

on:
  push:
    branches:
      - main
    paths:
      - 'apps/auto-email-sender/**/*'
      - 'packages/**/*'
      - 'Dockerfile.auto'
  workflow_dispatch:
    inputs:
      use_custom_registry:
        description: 'Use custom registry instead of Oracle Cloud'
        required: false
        default: true
        type: boolean

jobs:
  docker-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20.5.1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ inputs.use_custom_registry == 'true' && 'amd64' || 'arm64,arm,amd64' }}

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2.2.1

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.use_custom_registry == 'true' && secrets.DOCKER_REGISTRY_HOST || 'gru.ocir.io' }}
          username: ${{ inputs.use_custom_registry == 'true' && secrets.DOCKER_REGISTRY_USER || secrets.OCI_REPOSITORY_USER }}
          password: ${{ inputs.use_custom_registry == 'true' && secrets.DOCKER_REGISTRY_PASS || secrets.OCI_REPOSITORY_PASS }}

      - name: Install dependencies
        run: |
          npm install -g yarn
          yarn install

      - name: Build Docker image
        run: |
          REGISTRY=${{ inputs.use_custom_registry == 'true' && secrets.DOCKER_REGISTRY_HOST || 'gru.ocir.io' }}
          REPO=${{ inputs.use_custom_registry == 'true' && 'auto-email-sender' || 'gricbxnlp2kb/auto-email-sender' }}
          PLATFORMS=${{ inputs.use_custom_registry == 'true' && 'linux/amd64' || 'linux/arm64,linux/amd64' }}
          
          docker buildx build . --platform $PLATFORMS --file ./Dockerfile.auto -t "$REGISTRY/$REPO:latest" \
          --push \
          --build-arg SECRET_KEY="${{ secrets.SECRET_KEY }}" \
          --build-arg RESEND_KEY="${{ secrets.RESEND_KEY }}" \
          --build-arg SUPABASE_URL="${{ secrets.SUPABASE_URL }}" \
          --build-arg SUPABASE_SERVICE_ROLE="${{ secrets.SUPABASE_SERVICE_ROLE }}" \
          --build-arg MONGO_ADDRESS="${{ secrets.MONGO_ADDRESS }}" \
          --build-arg MONGO_PASSWORD="${{ secrets.MONGO_PASSWORD }}" \
          --build-arg MONGO_USERNAME="${{ secrets.MONGO_USERNAME }}" \
          --build-arg RABBITMQ_ADDRESS="${{ secrets.RABBITMQ_ADDRESS }}"

