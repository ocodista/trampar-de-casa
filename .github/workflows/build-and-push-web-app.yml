name: Build and push web app

on:
  push:
    branches:
      - main
    paths:
      - 'apps/web/**/*'
      - 'packages/**/*'
      - 'Dockerfile'
  workflow_dispatch:
    inputs:
      platform:
        description: 'Build platform (amd64 or arm64)'
        required: false
        default: 'amd64'
        type: string

jobs:
  docker-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ inputs.platform || 'amd64' }}

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2.2.1

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_HOST }}
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_PASS }}

      - name: Connect to Tailnet
        uses: tailscale/github-action@v3
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}

      - name: Start tailnet
        run: sudo tailscale up

      - name: Test tailnet connection
        run: sudo tailscale status 

      - name: Ping compose
        run: ping -c 4 compose

      - name: Test DNS Resolution in Build
        run: |
          docker run --rm --dns 100.100.100.100 busybox nslookup compose

      - name: Build Docker image
        run: |
          REGISTRY=${{ secrets.DOCKER_REGISTRY_HOST }}
          REPO='trampar-de-casa'
          PLATFORM='linux/${{ inputs.platform || 'amd64' }}'
          
          docker buildx build . --platform $PLATFORM \
          -t "$REGISTRY/$REPO:latest" \
          -t "$REGISTRY/$REPO:$(cd apps/web && cat package.json | jq -r '.version')" \
          --push \
          --dns 100.100.100.100 \
          --build-arg EMAIL_KEY="${{ secrets.EMAIL_KEY }}" \
          --build-arg EMAIL_PASS="${{ secrets.EMAIL_PASS }}" \
          --build-arg CRYPT_SECRET="${{ secrets.CRYPT_SECRET }}" \
          --build-arg RESEND_KEY="${{ secrets.RESEND_KEY }}" \
          --build-arg RESEND_WEBHOOK_SECRET="${{ secrets.RESEND_WEBHOOK_SECRET }}" \
          --build-arg OWNER_EMAIL="${{ secrets.OWNER_EMAIL }}" \
          --build-arg NEXT_PUBLIC_MIXPANEL_KEY="${{ secrets.NEXT_PUBLIC_MIXPANEL_KEY }}" \
          --build-arg CRON_SECRET="${{ secrets.CRON_SECRET }}" \
          --build-arg POSTGRES_URL="${{ secrets.POSTGRES_URL}}" \
          --build-arg REDIS_URL="${{ secrets.REDIS_URL}}" \
          --network host