# Base Stage
FROM ubuntu:22.04 AS base

# Set working directory
WORKDIR /app

# Declare Arguments
ARG SECRET_KEY
ARG RESEND_KEY
ARG SUPABASE_URL
ARG SUPABASE_SERVICE_ROLE
ARG MONGO_ADDRESS
ARG MONGO_PASSWORD
ARG MONGO_USERNAME
ARG RABBITMQ_ADDRESS

# Convert build-time variables to environment variables
ENV SECRET_KEY=$SECRET_KEY \
    RESEND_KEY=$RESEND_KEY \
    SUPABASE_URL=$SUPABASE_URL \
    SUPABASE_SERVICE_ROLE=$SUPABASE_SERVICE_ROLE \
    MONGO_ADDRESS=$MONGO_ADDRESS \
    MONGO_PASSWORD=$MONGO_PASSWORD \
    MONGO_USERNAME=$MONGO_USERNAME \
    RABBITMQ_ADDRESS=$RABBITMQ_ADDRESS

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    gfortran \
    libopenblas-dev \
    cmake \
    liblapack-dev \
    libffi-dev \
    git \
    curl \
    python3.11 \
    python3.11-venv \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Install Dockerize using curl
RUN curl -L https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz -o dockerize-linux-amd64-v0.6.1.tar.gz \
    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.6.1.tar.gz \
    && rm dockerize-linux-amd64-v0.6.1.tar.gz

# Install Node.js and npm
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get install -y nodejs

# Install TurboRepo and ts-node globally
RUN npm install -g turbo ts-node

###################################################################################################################

# Dependencies Stage
FROM base AS dependencies

# Set working directory
WORKDIR /app

# Copy the specific project files
COPY apps/auto-email-sender-new ./apps/auto-email-sender-new
COPY packages ./packages
COPY package*.json turbo.json yarn.lock ./

# Install monorepo dependencies and scoped project dependencies in one step
RUN npm install && npm install --prefix apps/auto-email-sender-new

###################################################################################################################

# Builder Stage
FROM dependencies AS builder

# Rebuild the source code only for the scoped project
RUN turbo run build --filter=./apps/auto-email-sender-new/*

# Setup match_roles and prepare Python environment
WORKDIR /app/apps/auto-email-sender-new/src/match_roles
RUN python3.11 -m venv matchenv && \
    . matchenv/bin/activate && \
    pip install --upgrade pip setuptools wheel cython pybind11 pythran && \
    pip install numpy scipy && \
    pip install -r requirements.txt

###################################################################################################################

# Final Stage (Runner)
FROM base AS runner

# Set working directory
WORKDIR /app

# Copy the build output and node_modules from the builder stage
COPY --from=builder /app /app

# Run the script with dockerize
CMD ["dockerize", "-wait", "tcp://rabbitmq:5672", "-wait", "tcp://mongo:27017", "-timeout", "300s", "ts-node", "apps/auto-email-sender-new/src/index.ts"]
